// 1. use array destructuring to extract the
// first and third elements of the array

// const colors = ["Red", "Blue", "Green"];
// const [firstColor, , thirdColor] = colors;

// console.log("First color:", firstColor);
// console.log("Third color:", thirdColor);

// 2.extract the ‘name’ & ‘age’ properties

// const person = {name: "Sreyproek", age: 26, job: "Police"};
// const { name, age } = person;

// console.log("Name:", name);
// console.log("Age:", age);

// 3.use destructuring to extract the street and city

// const user = {
//     id: 1,
//     name: "Pikaju",
//     address: {
//       street: "192 Main St",
//       city: "PP"
//     }
//   };

//   const { address: { street, city } } = user;

//   console.log("Street:", street);
//   console.log("City:", city);

// 4.User Given two arrays of nums1 and nums2

// const nums1 = [1, 2, 3];
// const nums2 = [4, 5, 6];

// const mergedArray = [...nums1, ...nums2];

// console.log(mergedArray);

// 5.take any number of arguments and calculates their sum

// function sumAll(...args) {
//     return args.reduce((total, num) => total + num, 0);
//   }
  
//   console.log(sumAll(1, 2)); 
//   console.log(sumAll(1, 2, 3, 4, 5));

// 6.

// const points = [{x: 1, y:2}, {x:2, y:3}, {x:3, y:4}];
// const [firstPoint, ...otherPoints] = points;

// console.log("First point:", firstPoint); 
// console.log("Other points:", otherPoints); 

// 7.
// function filterProps(obj, ...propsToFilter) {
//     const filteredObj = {};
//     for (const key in obj) {
//       if (!propsToFilter.includes(key)) {
//         filteredObj[key] = obj[key];
//       }
//     }
//     return filteredObj;
//   }
  
//   const object = {a: 1, b: 2, c: 3, d: 4};
//   console.log(filterProps(object, "b", "d"));
  
  
  
